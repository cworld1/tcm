# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'components/gui_origin.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtWidgets
from PyQt5.QtGui import QIcon
from qt_material import apply_stylesheet

# 用于展示视频（图像）
import cv2 as cv

# 组件导入
from components.box import ComboCheckBox

# 读取数据
from store.data import meridians, acupoints

# 交互逻辑
from hooks.utils import (
    playVideo,
    pauseVideo,
    updateImage,
    updateMeridiansList,
    updateAcupointsList,
)


class Ui_MainWindow(object):
    # 更新图片
    def setupUi(self, MainWindow):
        # 设定主窗口
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1400, 750)
        MainWindow.setWindowIcon(QIcon("./res/camera.ico"))  # 设置窗口图标
        MainWindow.setStyleSheet("font-size: 16px; font-family: 'Microsoft YaHei UI'")
        # 建立主布局
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setContentsMargins(20, 20, 20, 0)
        self.gridLayout.setSpacing(20)
        self.gridLayout.setObjectName("gridLayout")

        # 左侧侧栏布局 ----------
        self.sidebar_verticalLayout = QtWidgets.QVBoxLayout()
        self.sidebar_verticalLayout.setContentsMargins(0, 0, 0, -1)
        self.sidebar_verticalLayout.setObjectName("sidebar_verticalLayout")

        # Logo，使用 QLabel 实现
        self.logo = QtWidgets.QLabel(self.centralwidget)
        self.logo.setMinimumSize(QtCore.QSize(117, 67))
        self.logo.setMaximumSize(QtCore.QSize(117, 67))
        self.logo.setStyleSheet("image: url(./res/logo_simple.png)")
        self.logo.setText("")
        self.logo.setAlignment(QtCore.Qt.AlignCenter)
        self.logo.setObjectName("logo")
        self.sidebar_verticalLayout.addWidget(self.logo)

        # 经脉、穴位选择器，使用 QComboBox 实现
        # ComboBox 1
        self.meridiansBox = ComboCheckBox(meridians)
        self.meridiansBox.setMinimumSize(QtCore.QSize(420, 45))
        self.meridiansBox.setMaximumSize(QtCore.QSize(16777215, 45))
        self.meridiansBox.setStyleSheet("ComboCheckBox { color: #ffffff }")
        self.meridiansBox.setObjectName("meridiansBox")
        self.sidebar_verticalLayout.addWidget(self.meridiansBox)
        self.meridiansBox.signa.connect(updateMeridiansList)
        # ComboBox 2
        self.acupointsBox = ComboCheckBox(acupoints)
        self.acupointsBox.setMinimumSize(QtCore.QSize(420, 45))
        self.acupointsBox.setMaximumSize(QtCore.QSize(16777215, 45))
        self.acupointsBox.setStyleSheet("ComboCheckBox { color: #ffffff }")
        self.acupointsBox.setObjectName("acupointsBox")
        self.sidebar_verticalLayout.addWidget(self.acupointsBox)
        self.acupointsBox.signa.connect(updateAcupointsList)

        # 经脉、穴位展示，使用 QTextEdit 实现
        self.textEdit = QtWidgets.QTextEdit(self.centralwidget)
        self.textEdit.setMinimumSize(QtCore.QSize(420, 240))
        self.textEdit.setObjectName("textEdit")
        self.textEdit.setReadOnly(True)
        self.sidebar_verticalLayout.addWidget(self.textEdit)

        # 播放、暂停按钮，使用 QPushButton 实现
        self.buttons_horizontalLayout = QtWidgets.QHBoxLayout()
        self.buttons_horizontalLayout.setObjectName("buttons_horizontalLayout")
        # 空白布局 1
        spacerItem = QtWidgets.QSpacerItem(
            40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum
        )
        self.buttons_horizontalLayout.addItem(spacerItem)
        # QPushButton 1
        self.play = QtWidgets.QPushButton(self.centralwidget)
        self.play.setMinimumSize(QtCore.QSize(120, 40))
        self.play.setMaximumSize(QtCore.QSize(16777215, 40))
        self.play.setObjectName("play")
        self.buttons_horizontalLayout.addWidget(self.play)
        self.play.clicked.connect(playVideo)
        # QPushButton 2
        self.pause = QtWidgets.QPushButton(self.centralwidget)
        self.pause.setMinimumSize(QtCore.QSize(120, 40))
        self.pause.setMaximumSize(QtCore.QSize(16777215, 40))
        self.pause.setObjectName("pause")
        self.buttons_horizontalLayout.addWidget(self.pause)
        self.pause.clicked.connect(pauseVideo)
        # 空白布局 2
        spacerItem1 = QtWidgets.QSpacerItem(
            40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum
        )
        self.buttons_horizontalLayout.addItem(spacerItem1)
        self.sidebar_verticalLayout.addLayout(self.buttons_horizontalLayout)

        # 添加深度图像放置位置
        self.deepthImage = QtWidgets.QLabel(self.centralwidget)
        self.deepthImage.setMinimumSize(QtCore.QSize(420, 180))
        self.deepthImage.setStyleSheet("background-color: #232629; border-radius: 7px")
        self.deepthImage.setAlignment(QtCore.Qt.AlignCenter)
        self.deepthImage.setObjectName("deepthImage")
        self.sidebar_verticalLayout.addWidget(self.deepthImage)

        # 展示主图像，此处需要集成 Kinect 图像注入刷新
        self.gridLayout.addLayout(self.sidebar_verticalLayout, 0, 0, 1, 1)
        self.cameraImage = QtWidgets.QLabel(self.centralwidget)
        self.cameraImage.setStyleSheet("background-color: #232629; border-radius:7px")
        self.cameraImage.setScaledContents(True)
        self.cameraImage.setAlignment(QtCore.Qt.AlignCenter)
        self.cameraImage.setObjectName("cameraImage")

        # 主窗口
        self.gridLayout.addWidget(self.cameraImage, 0, 1, 1, 1)
        self.gridLayout.setColumnStretch(0, 1)
        self.gridLayout.setColumnStretch(1, 3)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1400, 26))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        # 建立UI翻译，注入文本内容
        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "TCM"))
        self.play.setText(_translate("MainWindow", "播放"))
        self.pause.setText(_translate("MainWindow", "暂停"))
        self.deepthImage.setText(_translate("MainWindow", "DeepthImage"))
        self.cameraImage.setText(_translate("MainWindow", "CameraImage"))


# 执行主程序
if __name__ == "__main__":
    import sys

    # 列表数据
    global selectedAcupoints, selectedMeridians
    selectedAcupoints = []
    selectedMeridians = []

    app = QtWidgets.QApplication(sys.argv)
    apply_stylesheet(app, theme="dark_teal.xml", extra={"font_family": "Roboto"})
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()

    # 测试
    image = cv.imread("./res/test.jpg")
    updateImage(ui.cameraImage, image)
    deepImage = cv.imread("./res/test.jpg")
    updateImage(ui.deepthImage, deepImage)
    sys.exit(app.exec_())
